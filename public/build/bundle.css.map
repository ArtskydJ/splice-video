{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte"
  ],
  "sourcesContent": [
    "<script>\t\n\tlet src = 'https://upload.wikimedia.org/wikipedia/commons/transcoded/4/4f/CanoeTacking.webm/CanoeTacking.webm.480p.vp9.webm'\n\t$: extension = src.split('.').pop()\n\t\n\tlet video\n\tlet sortedClips = [0, 25.68]\n\t\n\tlet checked = {}\n\t\n\t$: {\n\t\tconsole.log(checked)\n\t}\n\t\n\t$: pairedClips = sortedClips\n\t\t.reduce((memo, currClip, i, arr) => {\n\t\t\tif (i === 0) { return [] }\n\t\t\tlet prevClip = arr[i - 1]\n\t\t\tif (prevClip !== currClip) {\n\t\t\t\tmemo.push([ prevClip, currClip ])\n\t\t\t}\n\t\t\treturn memo\n\t\t}, [])\n\t\n\tlet commands = []\n\t\n  $: {\n\t\tcommands = pairedClips\n\t\t.filter((clip, i) => {\n\t\t\treturn checked[i]\n\t\t})\n\t\t.map((clip, i) => {\n\t\t\treturn `ffmpeg -i \"${src}\" -c copy -ss ${clip[0].toFixed(2)} -t ${(clip[1] - clip[0]).toFixed(2)} tmp${i}.${extension}`\n\t\t})\n\t\t\n\t\tif (commands.length === 0) {\n\t\t} else if (commands.length === 1) {\n\t\t\tcommands[0] = commands[0].replace(/tmp0\\.(.{2,5})$/, 'output.$1')\n\t\t} else {\n\t\t\tlet tmpfilenames = commands.map((cmd, i) => {\n\t\t\t\treturn `tmp${i}.${extension}`\n\t\t\t}).join('|')\n\t\t\tcommands.push(`ffmpeg -i \"concat:${tmpfilenames}\" -c copy output.${extension}`)\n\t\t}\n\t\tcommands = commands // trigger reactivity: https://svelte.dev/tutorial/updating-arrays-and-objects (might not be necessary here)\n\t}\n\t\n\t$: command = commands.join('\\n')\n\t\n\tsetTimeout(function () { video = document.querySelector('video') }, 0)\n\t\n\tfunction cut() {\n\t\tsortedClips.push( video.currentTime )\n\t\tsortedClips.sort(function (a, b) {\n\t\t\tif (a < b) return -1\n\t\t\tif (a > b) return 1\n\t\t\treturn 0\n\t\t})\n\t\tsortedClips = sortedClips // trigger reactivity: https://svelte.dev/tutorial/updating-arrays-and-objects\n\t}\n\t\n\tfunction showKeyboardShortcuts () {\n\t\talert([\n\t\t\t'[space]\\tPlay/Pause',\n\t\t\t'<\\t\\tBack 15 seconds',\n\t\t\t'>\\t\\tForward 15 seconds',\n\t\t\t',\\t\\tBack 1 frame',\n\t\t\t'.\\t\\tForward 1 frame',\n\t\t].join('\\n'))\n\t\t\n\t}\n</script>\n\n<style>\n\ttextarea {\n\t\t/*white-space: nowrap;*/\n\t\twidth: 100%;\n\t}\n\tvideo {\n\t\twidth: 100%;\n\t\tdisplay: block;\n\t} \n</style>\n\n<video {src} controls></video>\n<div>\n\t<button on:click={showKeyboardShortcuts}>⌨ Keyboard Shortcuts</button>\n</div>\n<div>\n\t<button on:click={cut}>✂ Split</button>\n</div>\n<div>\n\t{#each pairedClips as pair, i}\n\t\t<div>\n\t\t\t<button on:click={() => { checked[i] = !checked[i]}}>\n\t\t\t\t{checked[i] ? '✔ included' : '✘ not included'}\n\t\t\t</button>\n\t\t\t{pair[0].toFixed(2)} - {pair[1].toFixed(2)}\n\t\t\t{#if i != 0}\n\t\t\t\t<button on:click={() => { sortedClips = sortedClips.filter((clip, j) => j !== i) }}>\n\t\t\t\t\t⨇ merge up\n\t\t\t\t</button>\n\t\t\t{/if}\n\t\t</div>\n\t{/each}\n</div>\n<textarea>{command}</textarea>\n\n\n"
  ],
  "names": [],
  "mappings": "AAyEC,QAAQ,cAAC,CAAC,AAET,KAAK,CAAE,IAAI,AACZ,CAAC,AACD,KAAK,cAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,AACf,CAAC"
}